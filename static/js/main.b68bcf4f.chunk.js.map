{"version":3,"sources":["Auth/Auth.js","App.js","index.js"],"names":["Auth","useState","isAuth","name","accessToken","state","setIsAuth","useEffect","responseGoogle","response","profileObj","style","textAlign","clientId","buttonText","onLogoutSuccess","onFailure","alert","onSuccess","cookiePolicy","responseType","App","value","input","initialValue","setValue","bind","onChange","e","currentTarget","clear","useInput","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"+JA0DeA,EAvDF,WAAO,IAAD,EAEgBC,mBAAS,CAChCC,QAAQ,EACRC,KAAM,GACNC,YAAa,KALN,mBAEJC,EAFI,KAEGC,EAFH,KAQXC,qBAAU,cAEP,IAEH,IAAMC,EAAiB,SAACC,GACjBA,GACCH,EAAU,eACHD,EADE,CAELF,KAAMM,EAASC,WAAWP,KAC1BC,YAAaK,EAASL,YACtBF,QAAQ,MAYpB,OACI,yBAAKS,MAAO,CAACC,UAAW,WAClBP,EAAMH,OAQF,6BACE,4BAAKG,EAAMF,KAAOE,EAAMF,KAAO,MAC/B,kBAAC,eAAD,CACIU,SAAU,2EACVC,WAAY,SACZC,gBAvBL,SAACN,GACZH,EAAU,eAAID,EAAL,CAAYH,QAAQ,EAAOE,YAAa,OAuBjCY,UArBQ,SAACP,GACzBQ,MAAM,yBAOE,kBAAC,cAAD,CAAaJ,SAAS,2EAETK,UAAWV,EACXQ,UAAWR,EACXW,aAAc,qBACdC,aAAa,eAW7Bf,EAAMD,aAAe,wCAAcC,EAAMD,eCI3CiB,MA/Bf,WAEI,IAvBeC,EAuBTC,EAlBO,SAACC,GAAkB,IAAD,EACLvB,mBAASuB,GADJ,mBACxBF,EADwB,KACjBG,EADiB,KAS/B,MAAO,CACHC,KAAM,CAACJ,QAAOK,SAPD,SAACC,GACdH,EAASG,EAAEC,cAAcP,SAOzBA,QACAQ,MANU,WACVL,EAAS,MAWCM,CAAS,IAGvB,OA1BeT,EAwBLC,EAAMD,MAvBhBf,qBAAU,cAEP,CAACe,IAwBA,oCAQI,yBAAKU,UAAU,kBACX,yCAAOC,KAAK,QAAWV,EAAMG,OAC7B,4BAAQM,UAAU,kBAAkBE,QAAS,kBAAMX,EAAMO,UAAzD,oDACA,6BACA,4BAAKP,EAAMD,QAEf,6BACA,mLACA,kBAAC,EAAD,KACI,mGACA,sH,MC5ChBa,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.b68bcf4f.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\r\n\r\nconst Auth = () => {\r\n\r\n        const [state, setIsAuth] = useState({\r\n            isAuth: false,\r\n            name: '',\r\n            accessToken: ''\r\n        })\r\n\r\n        useEffect(() => {\r\n\r\n        }, [])\r\n\r\n        const responseGoogle = (response) => {\r\n            if(response){\r\n                setIsAuth({\r\n                    ...state,\r\n                    name: response.profileObj.name,\r\n                    accessToken: response.accessToken,\r\n                    isAuth: true\r\n                })\r\n            }\r\n        }\r\n        const logout = (response) => {\r\n            setIsAuth({...state, isAuth: false, accessToken: ''})\r\n        }\r\n        const handleLogoutFailure = (response) => {\r\n            alert('Failed to log out')\r\n        }\r\n\r\n\r\n        return (\r\n            <div style={{textAlign: \"center\"}}>\r\n                {!state.isAuth ?\r\n                    <GoogleLogin clientId=\"345999559557-l0djs7ot59j8914n1bp4mvkn08odsp4n.apps.googleusercontent.com\"\r\n                        /*       buttonText=\"Login with Google\"*/\r\n                                 onSuccess={responseGoogle}\r\n                                 onFailure={responseGoogle}\r\n                                 cookiePolicy={'single_host_origin'}\r\n                                 responseType='code,token'\r\n                    />\r\n                    : <div>\r\n                        <h1>{state.name ? state.name : null}</h1>\r\n                        <GoogleLogout\r\n                            clientId={\"345999559557-l0djs7ot59j8914n1bp4mvkn08odsp4n.apps.googleusercontent.com\"}\r\n                            buttonText={'Logout'}\r\n                            onLogoutSuccess={logout}\r\n                            onFailure={handleLogoutFailure}\r\n                        ></GoogleLogout>\r\n                    </div>}\r\n                {state.accessToken && <h5> token : {state.accessToken}</h5>}\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\nexport default Auth;","import React, {useEffect, useState} from 'react';\r\nimport Auth from \"./Auth/Auth\";\r\n\r\n\r\nconst useLogger = (value) => {\r\n    useEffect(() => {\r\n        // console.log('Value changed', value)\r\n    }, [value])\r\n}\r\nconst useInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue)\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const clear = () => {\r\n        setValue('')\r\n    }\r\n    return {\r\n        bind: {value, onChange},\r\n        value,\r\n        clear\r\n    }\r\n}\r\n\r\nfunction App() {\r\n\r\n    const input = useInput('')\r\n    useLogger(input.value)\r\n\r\n    return (\r\n        <>\r\n            {/*<AlertProvider>\r\n                <div className=\"container pt-3\">\r\n                    <Alert/>\r\n                    <Main toggle={() => {\r\n                    }}/>\r\n                </div>\r\n            </AlertProvider>*/}\r\n            <div className=\"container pt-3\">\r\n                <input type=\"text\" {...input.bind}/>\r\n                <button className=\"btn btn-warning\" onClick={() => input.clear()}>Очистить</button>\r\n                <hr/>\r\n                <h1>{input.value}</h1>\r\n            </div>\r\n            <hr/>\r\n            <h1>Авторизация с помощью гугла</h1>\r\n            <Auth>\r\n                <div>авторизован</div>\r\n                <div>не авторизован!!!</div>\r\n            </Auth>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}